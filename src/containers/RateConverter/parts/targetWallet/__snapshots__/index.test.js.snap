// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TargetWalletComponent /> snapshot test for TargetWalletComponent component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_default
    error={false}
    exchange={[MockFunction]}
    resultValue=""
    selectWallet={[MockFunction]}
    targetCurrency="EUR"
    userWallets={
      Object {
        "EUR": Object {
          "content": 0,
          "currency": "EUR",
        },
        "GBP": Object {
          "content": 2,
          "currency": "GBP",
        },
        "USD": Object {
          "content": 58,
          "currency": "USD",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span>
          <input
            className="convert_value_output"
            disabled={true}
            value=""
          />
        </span>,
        <span>
          <label>
            <select
              className="target_rate_select rate_select"
              onChange={[Function]}
              value="EUR"
            >
              <option
                value="USD"
              >
                USD
              </option>
              <option
                value="EUR"
              >
                EUR
              </option>
              <option
                value="GBP"
              >
                GBP
              </option>
            </select>
          </label>
        </span>,
        <span>
          <button
            className="rate_exchange"
            disabled={false}
            onClick={[Function]}
          >
            Exchange
          </button>
        </span>,
      ],
      "className": "aside aside-2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="convert_value_output"
            disabled={true}
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "convert_value_output",
            "disabled": true,
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <label>
            <select
              className="target_rate_select rate_select"
              onChange={[Function]}
              value="EUR"
            >
              <option
                value="USD"
              >
                USD
              </option>
              <option
                value="EUR"
              >
                EUR
              </option>
              <option
                value="GBP"
              >
                GBP
              </option>
            </select>
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <select
              className="target_rate_select rate_select"
              onChange={[Function]}
              value="EUR"
            >
              <option
                value="USD"
              >
                USD
              </option>
              <option
                value="EUR"
              >
                EUR
              </option>
              <option
                value="GBP"
              >
                GBP
              </option>
            </select>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="USD"
                >
                  USD
                </option>,
                <option
                  value="EUR"
                >
                  EUR
                </option>,
                <option
                  value="GBP"
                >
                  GBP
                </option>,
              ],
              "className": "target_rate_select rate_select",
              "onChange": [Function],
              "value": "EUR",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "USD",
                "nodeType": "host",
                "props": Object {
                  "children": "USD",
                  "value": "USD",
                },
                "ref": null,
                "rendered": "USD",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "EUR",
                "nodeType": "host",
                "props": Object {
                  "children": "EUR",
                  "value": "EUR",
                },
                "ref": null,
                "rendered": "EUR",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "GBP",
                "nodeType": "host",
                "props": Object {
                  "children": "GBP",
                  "value": "GBP",
                },
                "ref": null,
                "rendered": "GBP",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": "label",
        },
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="rate_exchange"
            disabled={false}
            onClick={[Function]}
          >
            Exchange
          </button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Exchange",
            "className": "rate_exchange",
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Exchange",
          "type": "button",
        },
        "type": "span",
      },
    ],
    "type": "aside",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            <input
              className="convert_value_output"
              disabled={true}
              value=""
            />
          </span>,
          <span>
            <label>
              <select
                className="target_rate_select rate_select"
                onChange={[Function]}
                value="EUR"
              >
                <option
                  value="USD"
                >
                  USD
                </option>
                <option
                  value="EUR"
                >
                  EUR
                </option>
                <option
                  value="GBP"
                >
                  GBP
                </option>
              </select>
            </label>
          </span>,
          <span>
            <button
              className="rate_exchange"
              disabled={false}
              onClick={[Function]}
            >
              Exchange
            </button>
          </span>,
        ],
        "className": "aside aside-2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="convert_value_output"
              disabled={true}
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "convert_value_output",
              "disabled": true,
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <label>
              <select
                className="target_rate_select rate_select"
                onChange={[Function]}
                value="EUR"
              >
                <option
                  value="USD"
                >
                  USD
                </option>
                <option
                  value="EUR"
                >
                  EUR
                </option>
                <option
                  value="GBP"
                >
                  GBP
                </option>
              </select>
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="target_rate_select rate_select"
                onChange={[Function]}
                value="EUR"
              >
                <option
                  value="USD"
                >
                  USD
                </option>
                <option
                  value="EUR"
                >
                  EUR
                </option>
                <option
                  value="GBP"
                >
                  GBP
                </option>
              </select>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="USD"
                  >
                    USD
                  </option>,
                  <option
                    value="EUR"
                  >
                    EUR
                  </option>,
                  <option
                    value="GBP"
                  >
                    GBP
                  </option>,
                ],
                "className": "target_rate_select rate_select",
                "onChange": [Function],
                "value": "EUR",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "USD",
                  "nodeType": "host",
                  "props": Object {
                    "children": "USD",
                    "value": "USD",
                  },
                  "ref": null,
                  "rendered": "USD",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "EUR",
                  "nodeType": "host",
                  "props": Object {
                    "children": "EUR",
                    "value": "EUR",
                  },
                  "ref": null,
                  "rendered": "EUR",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "GBP",
                  "nodeType": "host",
                  "props": Object {
                    "children": "GBP",
                    "value": "GBP",
                  },
                  "ref": null,
                  "rendered": "GBP",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "label",
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="rate_exchange"
              disabled={false}
              onClick={[Function]}
            >
              Exchange
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Exchange",
              "className": "rate_exchange",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Exchange",
            "type": "button",
          },
          "type": "span",
        },
      ],
      "type": "aside",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
